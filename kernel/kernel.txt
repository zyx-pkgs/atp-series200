
***************************************************
USE THE "vars.txt" commands to prepare the environment variables we will use.
SEE "cross-compile" section to prepare the build toolchain
***************************************************

##
sudo aptitude install u-boot-tools

##################################################
# CONFIGURE KERNEL
##################################################

This will apply:
	Kirkwood (Marvell Engineering Bus) default config
	Minimal Config for a functioning device
	(optional) Reduce Kernel Size not compiling unused stuff.
	(optional) Include some extra features (like sound, wifi, etc.)


The 1st section is mandatory for the very minimal working of the NAS.
Feel free to explore and add/remove features at your preference.



Since Kernel 3.17 a DTS file is available to compile a working DTB (see credits)


# You can download vanilla 4.x kernel and patch:
cd $KERNELWORKDIR/$KERNELCURRENT
patch -p1 < ../linux-4.1.0-kirkwood-tld-2.patch


## Prep tree
cd $KERNELWORKDIR/$KERNELCURRENT
make distclean && make mrproper



# Set labels for configured features in kernel name and filename
# You can you use this to differentiate different builds
LOCALVERSION=""
KERNELSUFFIX=""
UIMAGE_SYMLINK=""


### CONFIG:

If you are running newer upstream u-boot, you can use DTB file (preferred),
 otherwise you must enable a "DTB-appended" kernel to work even with 
 stock U-Boot (which is not able to pass DTB structure).

# Choose USE_STOCK_UBOOT = y for DTB file; n for DTB-Appended

USE_STOCK_UBOOT=n

cat arch/arm/configs/mvebu_v5_defconfig - <<EOF > .config
### MIMINAL HARDWARE CONFIG FOR ZYXEL NSA-325v2
# System Type
#CONFIG_ARCH_DEFCONFIG="arch/arm/configs/mvebu_v5_defconfig"
CONFIG_ARCH_KIRKWOOD_DT=y
CONFIG_ARM_APPENDED_DTB=$USE_STOCK_UBOOT
CONFIG_ATAGS=$USE_STOCK_UBOOT
CONFIG_ARM_ATAG_DTB_COMPAT=$USE_STOCK_UBOOT
# CPU Power Management
CONFIG_CPU_FREQ=n
CONFIG_ARCH_HAS_CPUFREQ=y
CONFIG_ARM_KIRKWOOD_CPUIDLE=y
# Power Management
CONFIG_SUSPEND=n
CONFIG_PM_RUNTIME=n
# NSA325 has just 512MB ram
CONFIG_HIGHMEM=n
# This is important otherwise you get "__nand_correct_data: uncorrectable ECC error__nand_correct_data: uncorrectable ECC error"
CONFIG_MTD_BLOCK=n
# sensors support
CONFIG_I2C_GPIO=y
CONFIG_I2C_MV64XXX=y
CONFIG_HWMON=y
CONFIG_SENSORS_GPIO_FAN=y
CONFIG_SENSORS_LM75=y
CONFIG_SENSORS_NSA3XX=y
# Ethernet
CONFIG_MV643XX_ETH=y
# USB
CONFIG_USB_SUPPORT=y
CONFIG_USB=y
CONFIG_USB_XHCI_HCD=y
CONFIG_USB_EHCI_HCD=y
CONFIG_USB_EHCI_HCD_ORION=y
# RTC - MV seems broken, board will use PCF8563 instead
CONFIG_RTC_DRV_MV=y
CONFIG_RTC_DRV_PCF8563=y
# other hardware
CONFIG_ORION_WATCHDOG=y
CONFIG_MV_XOR=y
# LEDS
CONFIG_LEDS_TRIGGER_ONESHOT=y
CONFIG_LEDS_TRIGGER_IDE_DISK=y
CONFIG_LEDS_TRIGGER_HEARTBEAT=y
CONFIG_LEDS_TRIGGER_GPIO=y
CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
CONFIG_LEDS_TRIGGER_TRANSIENT=y
# GPIO buttons
CONFIG_KEYBOARD_GPIO=y
# HW random generator
CONFIG_HW_RANDOM=y
# initramfs support (to be able to use root=LABEL=)
CONFIG_TMPFS=y
CONFIG_BLK_DEV_INITRD=y
# DEV KERNEL SUPPORT
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
# NetConsole support
CONFIG_NETCONSOLE=y
EOF


cat <<EOF >>.config
# Control Groups for SystemD
CONFIG_CGROUPS=y
CONFIG_CGROUP_FREEZER=y
CONFIG_CGROUP_DEVICE=y
CONFIG_CPUSETS=y
CONFIG_PROC_PID_CPUSET=y
CONFIG_CGROUP_CPUACCT=y
CONFIG_CGROUP_SCHED=y
CONFIG_FAIR_GROUP_SCHED=y
CONFIG_BLK_CGROUP=y
CONFIG_NAMESPACES=y
EOF



cat <<EOF >>.config
# No auto version label
CONFIG_LOCALVERSION_AUTO=n
# /proc/config.gz
CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
# Prepends timings
CONFIG_PRINTK_TIME=y
EOF


# SCSI BLOCK LAYER 4
cat <<EOF >>.config
CONFIG_BLK_DEV_BSG=y
EOF

cat <<EOF >>.config
# Disk Partitions
CONFIG_PARTITION_ADVANCED=y
CONFIG_MSDOS_PARTITION=y
CONFIG_EFI_PARTITION=y
CONFIG_LDM_PARTITION=y
CONFIG_MAC_PARTITION=y
# Filesystems support
CONFIG_EXT2_FS=y
CONFIG_EXT3_FS=y
CONFIG_EXT4_FS=y
CONFIG_XFS_FS=m
CONFIG_AUTOFS4_FS=m
CONFIG_OVERLAY_FS=y
CONFIG_FSCACHE=m
CONFIG_CACHEFILES=m
CONFIG_FANOTIFY=y
CONFIG_FUSE_FS=m
CONFIG_MSDOS_FS=m
CONFIG_VFAT_FS=y
CONFIG_NTFS_FS=m
CONFIG_NTFS_RW=y
CONFIG_JFFS2_FS=m
CONFIG_HFS_FS=m
CONFIG_HFSPLUS_FS=m
CONFIG_CIFS=m
CONFIG_CIFS_UPCALL=y
CONFIG_CIFS_XATTR=y
CONFIG_CIFS_POSIX=y
CONFIG_CIFS_ACL=y
CONFIG_CIFS_DFS_UPCALL=y
CONFIG_CIFS_SMB2=y
EOF


cat <<EOF >>.config
# Disk Managers - MD
CONFIG_MD=y
# MD AUTODETECT IS DEPRECATED - it works only with metadata=0.90
CONFIG_MD_AUTODETECT=n
CONFIG_BLK_DEV_MD=y
CONFIG_MD_LINEAR=y
CONFIG_MD_RAID0=y
CONFIG_MD_RAID1=y
# Disk Managers - LVM
CONFIG_BLK_DEV_DM=y
CONFIG_DM_CRYPT=m
CONFIG_DM_SNAPSHOT=m
CONFIG_DM_THIN_PROVISIONING=m
CONFIG_DM_MIRROR=n
CONFIG_DM_RAID=n
CONFIG_DM_UEVENT=y
EOF




# Reduce Kernel size
cat <<EOF >>.config
# Unused archs/machs selected by default kirkwood config
CONFIG_MACH_DLINK_KIRKWOOD_DT=n
CONFIG_MACH_NET2BIG_V2=n
CONFIG_MACH_NET5BIG_V2=n
CONFIG_MACH_NETXBIG=n
CONFIG_MACH_OPENRD_BASE=n
CONFIG_MACH_OPENRD_CLIENT=n
CONFIG_MACH_OPENRD_ULTIMATE=n
CONFIG_MACH_RD88F6192_NAS=n
CONFIG_MACH_RD88F6281=n
CONFIG_MACH_T5325=n
CONFIG_MACH_TS219=n
CONFIG_MACH_TS41X=n
CONFIG_MACH_D2NET_V2=n
CONFIG_MACH_MV88F6281GTW_GE_DT=n
# Unused sensors selected by default kirkwood config
CONFIG_SENSORS_ADT7475=n
CONFIG_SENSORS_LM63=n
CONFIG_SENSORS_LM85=n
## Unused Device Drivers 
CONFIG_BLK_DEV_SR=n
# Device Drivers / LED Support
CONFIG_LEDS_NS2=n
CONFIG_LEDS_NETXBIG=n
# Device Drivers / Real Time Clock
CONFIG_RTC_DRV_RS5C372=n
CONFIG_RTC_DRV_S35390A=n
CONFIG_RTC_DRV_S35390A=n
# Device Drivers / Network device support / Ethernet driver support
# These are not wifi devices
CONFIG_NET_VENDOR_3COM=n
CONFIG_NET_VENDOR_ADAPTEC=n
CONFIG_NET_VENDOR_AGERE=n
CONFIG_NET_VENDOR_ALTEON=n
CONFIG_NET_VENDOR_AMD=n
CONFIG_NET_VENDOR_ARC=n
CONFIG_NET_VENDOR_ATHEROS=n
CONFIG_NET_CADENCE=n
CONFIG_NET_VENDOR_BROADCOM=n
CONFIG_NET_VENDOR_BROCADE=n
CONFIG_NET_VENDOR_CHELSIO=n
CONFIG_NET_VENDOR_CIRRUS=n
CONFIG_NET_VENDOR_CISCO=n
CONFIG_NET_VENDOR_DEC=n
CONFIG_NET_VENDOR_DLINK=n
CONFIG_NET_VENDOR_EMULEX=n
CONFIG_NET_VENDOR_EXAR=n
CONFIG_NET_VENDOR_FARADAY=n
CONFIG_NET_VENDOR_HISILICON=n
CONFIG_NET_VENDOR_HP=n
CONFIG_NET_VENDOR_INTEL=n
CONFIG_NET_VENDOR_MELLANOX=n
CONFIG_NET_VENDOR_MICREL=n
CONFIG_NET_VENDOR_MICROCHIP=n
CONFIG_NET_VENDOR_MYRI=n
CONFIG_NET_VENDOR_NATSEMI=n
CONFIG_NET_VENDOR_NVIDIA=n
CONFIG_NET_VENDOR_OKI=n
CONFIG_NET_PACKET_ENGINE=n
CONFIG_NET_VENDOR_QUALCOMM=n
CONFIG_NET_VENDOR_QLOGIC=n
CONFIG_NET_VENDOR_REALTEK=n
CONFIG_NET_VENDOR_ROCKER=n
CONFIG_NET_VENDOR_RDC=n
CONFIG_NET_VENDOR_SAMSUNG=n
CONFIG_NET_VENDOR_SEEQ=n
CONFIG_NET_VENDOR_SILAN=n
CONFIG_NET_VENDOR_SIS=n
CONFIG_NET_VENDOR_SMSC=n
CONFIG_NET_VENDOR_STMICRO=n
CONFIG_NET_VENDOR_SUN=n
CONFIG_NET_VENDOR_TEHUTI=n
CONFIG_NET_VENDOR_TI=n
CONFIG_NET_VENDOR_VIA=n
CONFIG_NET_VENDOR_WIZNET=n
# USB Network Adapters
USB_NET_DRIVERS=n
EOF



# Further reduce Kernel size
cat <<EOF >>.config
# # Reduce kernel size not compiling unused stuff
# General setup section
CONFIG_PROFILING=n
CONFIG_KPROBES=n
CONFIG_RD_BZIP2=n
CONFIG_RD_LZMA=n
CONFIG_RD_XZ=n
CONFIG_RD_LZO=n
CONFIG_RD_LZ4=n
# Kernel Hacking section
CONFIG_DEBUG_KERNEL=n
CONFIG_DEBUG_FS=n
CONFIG_FTRACE=n
CONFIG_UNUSED_SYMBOLS=n
CONFIG_STRIP_ASM_SYMS=y
# Security section
CONFIG_SECURITY=n
CONFIG_SECURITY_SELINUX=n
CONFIG_SECURITY_TOMOYO=n
CONFIG_SECURITY_APPARMOR=n
EOF



# Disable WiFi Support 
cat <<EOF >>.config
# Disable WiFi Support 
CONFIG_WLAN=n
CONFIG_WIRELESS=n
EOF


# OPTIONAL FEATURES BEGIN
##############################

cat <<EOF >>.config
# OpenVPN/IPSEC support
CONFIG_TUN=m
CONFIG_L2TP=m
CONFIG_INET_AH=m
CONFIG_INET_ESP=m
EOF


# http://wiki.gentoo.org/wiki/Bluetooth
# http://wiki.gentoo.org/wiki/Bluetooth_Headset
# BLUETOOTH + SOUND SUPPORT
cat <<EOF >>.config
# SOUND SUPPORT
CONFIG_SOUND=m
CONFIG_SND=m
CONFIG_SND_SEQUENCER=m
CONFIG_SND_SEQ_DUMMY=m
CONFIG_SND_HRTIMER=m
CONFIG_SND_SEQ_HRTIMER_DEFAULT=y
CONFIG_SND_DYNAMIC_MINORS=y
CONFIG_SND_MAX_CARDS=4
CONFIG_SND_SUPPORT_OLD_API=y
CONFIG_SND_DRIVERS=y
# BLUETOOTH SUPPORT
CONFIG_BT=m
CONFIG_BT_RFCOMM=m
CONFIG_BT_RFCOMM_TTY=y
CONFIG_BT_BNEP=m
CONFIG_BT_BNEP_MC_FILTER=y
CONFIG_BT_BNEP_PROTO_FILTER=y
CONFIG_BT_HIDP=m
CONFIG_BT_HCIBTUSB=m
CONFIG_BT_HCIBTSDIO=m
CONFIG_BT_HCIUART=m
CONFIG_BT_HCIUART_H4=y
CONFIG_BT_HCIUART_BCSP=y
CONFIG_BT_HCIUART_ATH3K=y
CONFIG_BT_HCIUART_LL=y
CONFIG_BT_HCIUART_3WIRE=y
CONFIG_BT_HCIBCM203X=m
CONFIG_BT_HCIBPA10X=m
CONFIG_BT_HCIBFUSB=m
CONFIG_BT_HCIVHCI=m
CONFIG_BT_MRVL=m
CONFIG_BT_MRVL_SDIO=m
CONFIG_BT_ATH3K=m
# UINPUT for Headsets
CONFIG_INPUT_MISC=y
CONFIG_INPUT_UINPUT=m
# RFKILL
CONFIG_RFKILL=m
CONFIG_RFKILL_REGULATOR=m
CONFIG_RFKILL_GPIO=m
EOF



# USB AUDIO SUPPORT
cat <<EOF >>.config
# USB AUDIO SUPPORT
CONFIG_USB_AUDIO=m
CONFIG_SND_PCM=m
CONFIG_SND_HWDEP=m
CONFIG_SND_RAWMIDI=m
CONFIG_SND_RAWMIDI_SEQ=m
CONFIG_SND_USB_6FIRE=m
CONFIG_SND_USB_AUDIO=m
CONFIG_SND_USB_CAIAQ=m
CONFIG_SND_USB_HIFACE=m
CONFIG_SND_USB_UA101=m
CONFIG_SND_VMASTER=y
EOF


# USB-VGA from Magic Control Technology (SISUSBVGA)
cat <<EOF >>.config
CONFIG_FB=m
CONFIG_FRAMEBUFFER_CONSOLE=m
CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
CONFIG_FB_UDL=m
CONFIG_VT_HW_CONSOLE_BINDING=y
CONFIG_VGA_ARB=y
CONFIG_USB_SISUSBVGA=m
CONFIG_USB_SISUSBVGA_CON=y
CONFIG_FONT_8x8=y
CONFIG_FONT_8x16=y
EOF


cat <<EOF >>.config
# Example of a WiFi Dongle: DLINK DWL-G122 rev C1 USB
CONFIG_WLAN=y
WIRELESS=y
CONFIG_RT2X00=m
CONFIG_RT73USB=m
EOF


# // OPTIONAL FEATURES END
##############################


# sets label for kernel
cat <<EOF >>.config
CONFIG_LOCALVERSION="$LOCALVERSION"
EOF



## This will bring up the well-known ncurses-based configuration program.
## At this stage, you can exit and save and it will be ready.

make menuconfig

## compile (adjust -j for your host - this is for 8 CPUs)

# Compile for appended DTB or not:

if [ $USE_STOCK_UBOOT == "n" ]; then {
	make -j8 uImage LOADADDR=0x00008000 modules kirkwood-nsa325.dtb
} else {
	make -j8 zImage modules kirkwood-nsa325.dtb
}; fi

# Append DTB to zImage and make uImage:
if [ $USE_STOCK_UBOOT == "y" ]; then {
	cat arch/arm/boot/dts/kirkwood-nsa325.dtb >> arch/arm/boot/zImage
	mkimage -A arm -O linux -T kernel -C none -a 0x00008000 -e 0x00008000 -d arch/arm/boot/zImage arch/arm/boot/uImage
}; fi


##################################################
# INSTALL KERNEL into ROOTFS tree:
##################################################

# find current compiled version (Major.Minor)
cd $KERNELWORKDIR/$KERNELCURRENT
KERNELVERSION=$(grep -m5 "Linux/arm .* Kernel Configuration" .config | sed 's/.*Linux\/arm \(.*\) Kernel Configuration/\1/g' | cut -d. -f1-3)
echo $KERNELVERSION


# COPY uImage+DTB+modules to RootFS for HDD/USB:
sudo cp arch/arm/boot/uImage $RFShdd/boot/uImage-v${KERNELVERSION}${KERNELSUFFIX}
if [ $USE_STOCK_UBOOT == "n" ]; then sudo cp arch/arm/boot/dts/kirkwood-nsa325.dtb $RFShdd/boot/kirkwood-nsa325.dtb; fi
sudo ln -sf uImage-v${KERNELVERSION}${KERNELSUFFIX} $RFShdd/boot/uImage${UIMAGE_SYMLINK}
make INSTALL_MOD_PATH=$KERNELWORKDIR modules_install
find $KERNELWORKDIR/lib/modules -maxdepth 2 -name build -type l -delete
find $KERNELWORKDIR/lib/modules -maxdepth 2 -name source -type l -delete
sudo chown -R root:root $KERNELWORKDIR/lib/*
sudo cp -a $KERNELWORKDIR/lib/* $RFShdd/lib/


#######################################################################################################################
## Credits: 
## - thanks to Bodhi for his endless work on Doozan Forum: http://forum.doozan.com/profile.php?2,297
#######################################################################################################################